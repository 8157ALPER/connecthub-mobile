workflows:
  android-workflow:
    name: ConnectHub Android Build
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      android_signing:
        - keystore_reference
      groups:
        - google_play
      vars:
        PACKAGE_NAME: "com.connecthub.app"
        GOOGLE_PLAY_TRACK: internal
      node: 20.18.0
      java: 17
    scripts:
      - name: Set up local.properties
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
      - name: Install npm dependencies
        script: |
          npm ci --legacy-peer-deps
      - name: Install compatible Capacitor CLI
        script: |
          npm install -g @capacitor/cli@6.1.2
      - name: Build frontend only (Vite)
        script: |
          echo "=== Building frontend with Vite ==="
          npx vite build --mode production
      - name: Verify build output
        script: |
          echo "=== Checking build output ==="
          ls -la dist/public/
          echo "=== Key files ==="
          ls -la dist/public/index.html
          ls -la dist/public/assets/
      - name: Try Capacitor copy first
        script: |
          echo "=== Trying Capacitor copy ==="
          npx cap copy android
      - name: Check what was copied
        script: |
          echo "=== Android assets after copy ==="
          ls -la android/app/src/main/assets/
          ls -la android/app/src/main/assets/public/
      - name: Remove existing Android directory
        script: |
          echo "=== Removing incomplete Android directory ==="
          rm -rf android
      - name: Force downgrade Capacitor packages for Java 17
        script: |
          echo "=== Force installing Java 17 compatible Capacitor ==="
          npm install @capacitor/core@6.1.2 @capacitor/cli@6.1.2 @capacitor/android@6.1.2 --force
          npm install @capacitor/keyboard@6.0.1 @capacitor/splash-screen@6.0.1 @capacitor/status-bar@6.0.1 --force
      - name: Capacitor add Android platform
        script: |
          echo "=== Adding Android platform with Java 17 compatible version ==="
          npx cap add android
      - name: Verify Capacitor 6.x installation
        script: |
          echo "=== Checking Capacitor versions ==="
          npx cap --version
          npm list @capacitor/core @capacitor/android @capacitor/cli
          echo "=== Should show version 6.x for Java 17 compatibility ==="
      - name: Verify Android setup
        script: |
          echo "=== Android directory after cap add ==="
          ls -la android/
          echo "=== Checking for gradlew ==="
          ls -la android/gradlew
          echo "=== Checking gradle wrapper ==="
          ls -la android/gradle/wrapper/
      - name: Copy web assets to Android
        script: |
          echo "=== Copying web assets ==="
          npx cap copy android
      - name: Check Gradle build files
        script: |
          cd android
          echo "=== Checking build.gradle files ==="
          ls -la build.gradle
          ls -la app/build.gradle
          echo "=== Gradle wrapper info ==="
          ls -la gradle/wrapper/
      - name: Set up app signing
        script: |
          cd android
          echo "=== Setting up release signing ==="
          cat >> app/build.gradle << 'EOF'
          
          android {
              signingConfigs {
                  release {
                      if (System.getenv()["CM_KEYSTORE_PATH"]) {
                          storeFile file(System.getenv()["CM_KEYSTORE_PATH"])
                          storePassword System.getenv()["CM_KEYSTORE_PASSWORD"]
                          keyAlias System.getenv()["CM_KEY_ALIAS"]
                          keyPassword System.getenv()["CM_KEY_PASSWORD"]
                      }
                  }
              }
              buildTypes {
                  release {
                      signingConfig signingConfigs.release
                  }
              }
          }
          EOF
      - name: Clean and build signed Android AAB
        script: |
          cd android
          chmod +x gradlew
          echo "=== Cleaning previous build ==="
          ./gradlew clean
          echo "=== Building SIGNED release AAB ==="
          ./gradlew bundleRelease
      - name: Find all build outputs
        script: |
          cd android
          echo "=== Searching for all build outputs ==="
          find . -name "*.aab" -type f 2>/dev/null || echo "No .aab files found"
          find . -name "*.apk" -type f 2>/dev/null || echo "No .apk files found"
          echo "=== Build outputs directory structure ==="
          ls -la app/build/outputs/ 2>/dev/null || echo "No outputs directory"
          find app/build/outputs/ -type f 2>/dev/null || echo "No files in outputs"
          echo "=== Complete app/build structure ==="
          find app/build/ -name "*bundle*" -o -name "*aab*" -o -name "*apk*" 2>/dev/null || echo "No bundle/aab/apk files found"
    artifacts:
      - android/app/build/outputs/**/*
      - android/app/build/**/*.aab
      - android/app/build/**/*.apk
    publishing:
      email:
        recipients:
          - your-metealper@gmail.com
        notify:
          success: true
          failure: false
