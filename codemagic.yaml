workflows:
  android-workflow:
    name: ConnectHub Android Build
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      groups:
        - google_play
      vars:
        PACKAGE_NAME: "com.connecthub.app"
      node: 20.18.0
      java: 17
    scripts:
      - name: Set up local.properties
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
      - name: Install npm dependencies
        script: |
          npm ci --legacy-peer-deps
      - name: Install Capacitor CLI globally
        script: |
          npm install -g @capacitor/cli@latest
      - name: Build frontend only (Vite)
        script: |
          echo "=== Building frontend with Vite ==="
          npx vite build --mode production
      - name: Verify build output
        script: |
          echo "=== Checking build output ==="
          ls -la dist/public/
          echo "=== Key files ==="
          ls -la dist/public/index.html
          ls -la dist/public/assets/
      - name: Try Capacitor copy first
        script: |
          echo "=== Trying Capacitor copy ==="
          npx cap copy android
      - name: Check what was copied
        script: |
          echo "=== Android assets after copy ==="
          ls -la android/app/src/main/assets/
          ls -la android/app/src/main/assets/public/
      - name: Remove existing Android directory
        script: |
          echo "=== Removing incomplete Android directory ==="
          rm -rf android
      - name: Capacitor add Android platform
        script: |
          echo "=== Adding fresh Android platform ==="
          npx cap add android
      - name: Force Java 17 compatibility everywhere
        script: |
          echo "=== Forcing Java 17 compatibility aggressively ==="
          cd android
          
          # Set global gradle properties
          cat > gradle.properties << 'EOF'
          android.useAndroidX=true
          android.enableJetifier=true
          org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError
          android.defaults.buildfeatures.buildconfig=true
          android.nonTransitiveRClass=false
          android.nonFinalResIds=false
          org.gradle.java.home=/usr/lib/jvm/java-17-openjdk
          EOF
          
          # Force Java 17 in all build.gradle files
          find . -name "build.gradle" -type f | while read file; do
            echo "Fixing Java version in: $file"
            # Replace any Java version references
            sed -i 's/JavaVersion\.VERSION_[0-9]\+/JavaVersion.VERSION_17/g' "$file"
            sed -i 's/jvmTarget = "[0-9]\+"/jvmTarget = "17"/g' "$file"
            sed -i 's/sourceCompatibility = "[0-9]\+"/sourceCompatibility = "17"/g' "$file"
            sed -i 's/targetCompatibility = "[0-9]\+"/targetCompatibility = "17"/g' "$file"
            sed -i 's/compileSdk [0-9]\+/compileSdk 34/g' "$file"
            sed -i 's/targetSdk [0-9]\+/targetSdk 34/g' "$file"
          done
          
          # Show what we fixed
          echo "=== Checking for remaining Java 21 references ==="
          grep -r "21" . --include="*.gradle" || echo "No Java 21 references found"
          echo "=== Java 17 force applied to all files ==="
      - name: Verify Android setup
        script: |
          echo "=== Android directory after cap add ==="
          ls -la android/
          echo "=== Checking for gradlew ==="
          ls -la android/gradlew
          echo "=== Checking gradle wrapper ==="
          ls -la android/gradle/wrapper/
      - name: Copy web assets to Android
        script: |
          echo "=== Copying web assets ==="
          npx cap copy android
      - name: Check Gradle build files
        script: |
          cd android
          echo "=== Checking build.gradle files ==="
          ls -la build.gradle
          ls -la app/build.gradle
          echo "=== Gradle wrapper info ==="
          ls -la gradle/wrapper/
      - name: Clean and build Android AAB
        script: |
          cd android
          chmod +x gradlew
          echo "=== Cleaning previous build ==="
          ./gradlew clean
          echo "=== Building Android AAB ==="
          ./gradlew bundleDebug
      - name: Find all build outputs
        script: |
          cd android
          echo "=== Searching for all build outputs ==="
          find . -name "*.aab" -type f 2>/dev/null || echo "No .aab files found"
          find . -name "*.apk" -type f 2>/dev/null || echo "No .apk files found"
          echo "=== Build outputs directory structure ==="
          ls -la app/build/outputs/ 2>/dev/null || echo "No outputs directory"
          find app/build/outputs/ -type f 2>/dev/null || echo "No files in outputs"
          echo "=== Complete app/build structure ==="
          find app/build/ -name "*bundle*" -o -name "*aab*" -o -name "*apk*" 2>/dev/null || echo "No bundle/aab/apk files found"
    artifacts:
      - android/app/build/outputs/**/*
      - android/app/build/**/*.aab
      - android/app/build/**/*.apk
    publishing:
      email:
        recipients:
          - your-metealper@gmail.com
        notify:
          success: true
          failure: false
